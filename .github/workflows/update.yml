name: Release

on:
  workflow_dispatch:
    inputs:
      build_container:
        type: boolean
        description: "Should this build also build a new Docker image"
  schedule:
    - cron: '41 */12 * * *'


jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Setup
        run: |
          npm --no-audit --progress=false ci &
          (curl --location --remote-name https://storage.gmodwiki.com/build_cache.zip && unzip -q build_cache.zip && rm -v build_cache.zip) &
          (curl --location --remote-name https://storage.gmodwiki.com/public_cache.zip && unzip -q public_cache.zip && rm -v public_cache.zip) &
          wait

      - name: Remove expired files
        run: |
          npm run clear_recent_changes

      - name: Scrape and Build
        env:
          BUILD_ENV: production
        run: |
          npm run build


      - name: Build final pack
        env:
          BUILD_ENV: production
        run: |
          npm run astrobuild


      # Remote cache
      - name: Prepare remote cache files
        run: |
          zip --recurse-paths -9 --quiet public_cache.zip ./public &
          zip --recurse-paths -9 --quiet build_cache.zip ./build/cache &
          wait


      # Docker
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker Image
        if: ${{ (github.event_name == 'schedule' && (format('{{date:u}}')) == '1') || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_container == 'true') }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/equoo/gmodwiki:latest
